{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"群聊\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"chatbox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: msg.time\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(msg.username), 1 /* TEXT */), _createTextVNode(\": \" + _toDisplayString(msg.message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"输入消息...\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.message]])]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","messages","msg","key","time","_toDisplayString","username","message","$event","onKeyup","_cache","_withKeys","args","$options","sendMessage","placeholder"],"sources":["/opt/chat-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>群聊</h1>\n    <div id=\"chatbox\">\n      <div v-for=\"msg in messages\" :key=\"msg.time\">\n        <strong>{{ msg.username }}</strong>: {{ msg.message }}\n      </div>\n    </div>\n    <input v-model=\"message\" @keyup.enter=\"sendMessage\" placeholder=\"输入消息...\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ws: null,\n      message: '',\n      messages: []\n    };\n  },\n  created() {\n    this.ws = new WebSocket('ws://139.198.33.164:8000/ws');\n    this.ws.addEventListener('message', (e) => {\n      this.messages.push(JSON.parse(e.data));\n    });\n  },\n\n\n  methods: {\n    connectWebSocket() {\n      this.ws = new WebSocket('ws://localhost:8000/ws');\n      this.ws.onmessage = (e) => {\n        this.messages.push(JSON.parse(e.data));\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected. Attempting to reconnect...');\n        setTimeout(() => {\n          this.connectWebSocket();\n        }, 5000); // 5 秒后重连\n      };\n    },\n\n    sendMessage() {\n      const msg = { username: '用户', message: this.message };\n      this.ws.send(JSON.stringify(msg));\n      this.message = '';\n    }\n  },\n\n  created() {\n    this.connectWebSocket();\n  }\n\n};\n</script>\n\n<style>\n#app {\n  text-align: center;\n}\n\n#chatbox {\n  height: 300px;\n  overflow-y: scroll;\n  border: 1px solid #ddd;\n  margin: auto;\n  padding: 10px;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAW,YAAP,IAAE;;EACDD,EAAE,EAAC;AAAS;;uBAFnBE,mBAAA,CAQM,OARNC,UAQM,GAPJC,UAAW,EACXH,mBAAA,CAIM,OAJNI,UAIM,I,kBAHJH,mBAAA,CAEMI,SAAA,QAAAC,WAAA,CAFaC,KAAA,CAAAC,QAAQ,EAAfC,GAAG;yBAAfR,mBAAA,CAEM;MAFwBS,GAAG,EAAED,GAAG,CAACE;QACrCX,mBAAA,CAAmC,gBAAAY,gBAAA,CAAxBH,GAAG,CAACI,QAAQ,kB,iBAAY,IAAE,GAAAD,gBAAA,CAAGH,GAAG,CAACK,OAAO,iB;oDAGvDd,mBAAA,CAA0E;+DAA1DO,KAAA,CAAAO,OAAO,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,WAAW,EAAC;iEAAhDf,KAAA,CAAAO,OAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}